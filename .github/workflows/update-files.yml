name: Update Files from API

on:
  repository_dispatch:
    types: [update-files]

jobs:
  update-files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create or Checkout Branch
        id: create-or-checkout-branch
        run: |
          BRANCH_NAME="update-files"
          if git show-ref --verify --quiet refs/heads/$BRANCH_NAME; then
            git checkout $BRANCH_NAME
          else
            git checkout -b $BRANCH_NAME
          fi
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Download ZIP from API
        run: |
          curl -o files.zip "https://translator.cnr.stijnjw.com/api/translations/retrieve/xml"

      - name: Unzip Files
        run: |
          unzip -o files.zip -d new_files

      - name: Move Files to Repository
        run: |
          mv new_files/* .

      - name: Remove ZIP File
        run: |
          rm files.zip

      - name: Debug Git Changes
        run: |
          git status
          git diff --stat


      - name: Commit and Push Changes
        id: commit-and-push
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add --all
          if git diff --cached --quiet; then
            echo "changes=false" >> $GITHUB_ENV
          else
            echo "One"
            git status

            git commit -m "Update files from API"

            echo "Two"
            git status

            git fetch origin
            git reset --hard origin/$BRANCH_NAME

            echo "Three"
            git status

            git push --force origin $BRANCH_NAME

            echo "Four"
            git status

            echo "changes=true" >> $GITHUB_ENV
          fi

      - name: Debug Git Changes 2
        run: |
          git status
          git diff --stat

      - name: Check for Existing Pull Request
        id: check-pr
        run: |
          PR_URL=$(gh pr list --head $BRANCH_NAME --json url --jq '.[0].url')
          if [ -z "$PR_URL" ]; then
            echo "PR_EXISTS=false" >> $GITHUB_ENV
          else
            echo "PR_EXISTS=true" >> $GITHUB_ENV
            echo "PR_URL=$PR_URL" >> $GITHUB_ENV
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create or Update Pull Request
        if: env.changes == 'true' && env.PR_EXISTS == 'false'
        run: |
          gh pr create \
            --base main \
            --head ${{ env.BRANCH_NAME }} \
            --title "Upload updated XML files - up to $(date +"%Y-%m-%d %H:%M:%S")" \
            --body "This PR contains updated files from the translator website." \
            --label "automated"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Pull Request
        if: env.changes == 'true' && env.PR_EXISTS == 'true'
        run: |
          gh pr comment ${{ env.PR_URL }} --body "Updated files from the translator website."
          gh pr edit ${{ env.PR_URL }} --title "Upload updated XML files - up to $(date +"%Y-%m-%d %H:%M:%S")"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
